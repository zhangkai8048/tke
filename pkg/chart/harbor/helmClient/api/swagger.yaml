openapi: 3.0.1
info:
  title: Harbor API
  description: These APIs provide services for manipulating Harbor project.
servers:
- url: http://localhost/api/
- url: https://localhost/api/
security:
- basicAuth: []
paths:
  /version:
    get:
      tags:
      - Version
      summary: Get API version
      description: Get the version of API that supported by the Harbor instance.
      responses:
        "200":
          description: The supported API version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
  /chartrepo/health:
    get:
      tags:
      - Chart Repository
      summary: Check the health of chart repository service.
      description: Check the health of chart repository service.
      responses:
        "200":
          description: Health status of chart repository service is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "401":
          $ref: '#/definitions/UnauthorizedChartAPIError'
        "403":
          $ref: '#/definitions/ForbiddenChartAPIError'
  /chartrepo/{repo}/charts:
    get:
      tags:
      - Chart Repository
      summary: Get all the charts under the specified project
      description: Get all the charts under the specified project
      parameters:
      - name: repo
        in: path
        description: The project name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Searched for charts of project in Harbor successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChartInfoEntry'
                x-content-type: application/json
        "401":
          $ref: '#/definitions/UnauthorizedChartAPIError'
        "403":
          $ref: '#/definitions/ForbiddenChartAPIError'
        "500":
          $ref: '#/definitions/InternalChartAPIError'
    post:
      tags:
      - Chart Repository
      summary: Upload a chart file to the specified project.
      description: Upload a chart file to the specified project. With this API, the
        corresponding provance file can be uploaded together with chart file at once.
      parameters:
      - name: repo
        in: path
        description: The project name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body'
        required: true
      responses:
        "201":
          description: The specified chart is successfully uploaded.
          content: {}
        "401":
          $ref: '#/definitions/UnauthorizedChartAPIError'
        "403":
          $ref: '#/definitions/ForbiddenChartAPIError'
        "500":
          $ref: '#/definitions/InternalChartAPIError'
        "507":
          $ref: '#/definitions/InsufficientStorageChartAPIError'
  /chartrepo/{repo}/charts/{name}:
    get:
      tags:
      - Chart Repository
      summary: Get all the versions of the specified chart
      description: Get all the versions of the specified chart
      parameters:
      - name: repo
        in: path
        description: The project name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        description: The chart name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Retrieved all versions of the specified chart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChartVersions'
        "401":
          $ref: '#/definitions/UnauthorizedChartAPIError'
        "403":
          $ref: '#/definitions/ForbiddenChartAPIError'
        "404":
          $ref: '#/definitions/NotFoundChartAPIError'
        "500":
          $ref: '#/definitions/InternalChartAPIError'
    delete:
      tags:
      - Chart Repository
      summary: Delete all the versions of the specified chart
      description: Delete all the versions of the specified chart
      parameters:
      - name: repo
        in: path
        description: The project name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        description: The chart name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The specified chart entry is successfully deleted.
          content: {}
        "401":
          $ref: '#/definitions/UnauthorizedChartAPIError'
        "403":
          $ref: '#/definitions/ForbiddenChartAPIError'
        "500":
          $ref: '#/definitions/InternalChartAPIError'
  /chartrepo/{repo}/charts/{name}/{version}:
    get:
      tags:
      - Chart Repository
      summary: Get the specified chart version
      description: Get the specified chart version
      parameters:
      - name: repo
        in: path
        description: The project name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        description: The chart name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: The chart version
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved the chart version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChartVersionDetails'
        "401":
          $ref: '#/definitions/UnauthorizedChartAPIError'
        "403":
          $ref: '#/definitions/ForbiddenChartAPIError'
        "404":
          $ref: '#/definitions/NotFoundChartAPIError'
        "500":
          $ref: '#/definitions/InternalChartAPIError'
    delete:
      tags:
      - Chart Repository
      summary: Delete the specified chart version
      description: Delete the specified chart version
      parameters:
      - name: repo
        in: path
        description: The project name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: path
        description: The chart name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: The chart version
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The specified chart entry is successfully deleted.
          content: {}
        "401":
          $ref: '#/definitions/UnauthorizedChartAPIError'
        "403":
          $ref: '#/definitions/ForbiddenChartAPIError'
        "404":
          $ref: '#/definitions/NotFoundChartAPIError'
        "500":
          $ref: '#/definitions/InternalChartAPIError'
  /chartrepo/{repo}/prov:
    post:
      tags:
      - Chart Repository
      summary: Upload a provance file to the specified project.
      description: Upload a provance file to the specified project. The provance file
        should be targeted for an existing chart file.
      parameters:
      - name: repo
        in: path
        description: The project name
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body_1'
        required: true
      responses:
        "201":
          description: The provance file is successfully uploaded.
          content: {}
        "401":
          $ref: '#/definitions/UnauthorizedChartAPIError'
        "403":
          $ref: '#/definitions/ForbiddenChartAPIError'
        "500":
          $ref: '#/definitions/InternalChartAPIError'
        "507":
          $ref: '#/definitions/InsufficientStorageChartAPIError'
  /chartrepo/charts:
    post:
      tags:
      - Chart Repository
      summary: Upload a chart file to the defult 'library' project.
      description: Upload a chart file to the default 'library' project. Uploading
        together with the prov file at the same time is also supported.
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/body_2'
        required: true
      responses:
        "201":
          description: The specified chart is successfully uploaded.
          content: {}
        "401":
          $ref: '#/definitions/UnauthorizedChartAPIError'
        "403":
          $ref: '#/definitions/ForbiddenChartAPIError'
        "500":
          $ref: '#/definitions/InternalChartAPIError'
        "507":
          $ref: '#/definitions/InsufficientStorageChartAPIError'
components:
  schemas:
    ChartAPIError:
      required:
      - error
      type: object
      properties:
        error:
          type: string
          description: The error message returned by the chart API
      description: The error object returned by chart repository API
    UnauthorizedChartAPIError:
      description: Unauthorized
      allOf:
      - $ref: '#/components/schemas/ChartAPIError'
    ForbiddenChartAPIError:
      description: Operation is forbidden or quota exceeded
      allOf:
      - $ref: '#/components/schemas/ChartAPIError'
    InternalChartAPIError:
      description: Internal server error occurred
      allOf:
      - $ref: '#/components/schemas/ChartAPIError'
    NotFoundChartAPIError:
      description: Not found
      allOf:
      - $ref: '#/components/schemas/ChartAPIError'
    InsufficientStorageChartAPIError:
      description: Insufficient storage
      allOf:
      - $ref: '#/components/schemas/ChartAPIError'
    ChartInfoEntry:
      required:
      - created
      - name
      - total_versions
      type: object
      properties:
        name:
          type: string
          description: Name of chart
        total_versions:
          type: integer
          description: Total count of chart versions
        latest_version:
          type: string
          description: latest version of chart
        created:
          type: string
          description: The created time of chart
        updated:
          type: string
          description: The created time of chart
        icon:
          type: string
          description: The icon path of chart
        home:
          type: string
          description: The home website of chart
        deprecated:
          type: boolean
          description: Flag to indicate if the chart is deprecated
      description: The object contains basic chart information
      example:
        total_versions: 0
        latest_version: latest_version
        created: created
        deprecated: true
        name: name
        icon: icon
        updated: updated
        home: home
    ChartInfoList:
      type: array
      description: The chart list under the project
      items:
        $ref: '#/components/schemas/ChartInfoEntry'
    ChartVersion:
      properties:
        labels:
          $ref: '#/components/schemas/Labels'
      description: A specified chart entry
      example:
        labels:
        - creation_time: creation_time
          update_time: update_time
          deleted: true
          color: color
          project_id: 6
          scope: scope
          name: name
          description: description
          id: 0
        - creation_time: creation_time
          update_time: update_time
          deleted: true
          color: color
          project_id: 6
          scope: scope
          name: name
          description: description
          id: 0
      allOf:
      - $ref: '#/components/schemas/ChartMetadata'
      - type: object
        properties:
          created:
            type: string
            description: The created time of the chart entry
          removed:
            type: boolean
            description: A flag to indicate if the chart entry is removed
          digest:
            type: string
            description: The digest value of the chart entry
          urls:
            type: array
            description: The urls of the chart entry
            items:
              type: string
    ChartVersions:
      type: array
      description: A list of chart entry
      items:
        $ref: '#/components/schemas/ChartVersion'
      x-schema-name: ChartVersions
    ChartVersionDetails:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/ChartVersion'
        security:
          $ref: '#/components/schemas/SecurityReport'
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/Dependency'
        values:
          type: object
          additionalProperties:
            type: object
            properties: {}
            example: {}
        files:
          type: object
          additionalProperties:
            type: string
        labels:
          $ref: '#/components/schemas/Labels'
      description: The detailed information of the chart entry
      example:
        metadata:
          labels:
          - creation_time: creation_time
            update_time: update_time
            deleted: true
            color: color
            project_id: 6
            scope: scope
            name: name
            description: description
            id: 0
          - creation_time: creation_time
            update_time: update_time
            deleted: true
            color: color
            project_id: 6
            scope: scope
            name: name
            description: description
            id: 0
        security:
          signature:
            prov_file: prov_file
            signed: true
        values:
          key: {}
        files:
          key: files
        dependencies:
        - name: name
          repository: repository
          version: version
        - name: name
          repository: repository
          version: version
        labels:
        - creation_time: creation_time
          update_time: update_time
          deleted: true
          color: color
          project_id: 6
          scope: scope
          name: name
          description: description
          id: 0
        - creation_time: creation_time
          update_time: update_time
          deleted: true
          color: color
          project_id: 6
          scope: scope
          name: name
          description: description
          id: 0
    ChartMetadata:
      required:
      - apiVersion
      - appVersion
      - engine
      - icon
      - name
      - version
      type: object
      properties:
        name:
          type: string
          description: The name of the chart
        home:
          type: string
          description: The URL to the relevant project page
        sources:
          type: array
          description: The URL to the source code of chart
          items:
            type: string
        version:
          type: string
          description: A SemVer 2 version of chart
        description:
          type: string
          description: A one-sentence description of chart
        keywords:
          type: array
          description: A list of string keywords
          items:
            type: string
        engine:
          type: string
          description: The name of template engine
        icon:
          type: string
          description: The URL to an icon file
        apiVersion:
          type: string
          description: The API version of this chart
        appVersion:
          type: string
          description: The version of the application enclosed in the chart
        deprecated:
          type: boolean
          description: Whether or not this chart is deprecated
      description: The metadata of chart version
    Labels:
      type: array
      description: A list of label
      items:
        $ref: '#/components/schemas/Label'
      x-schema-name: Labels
    Label:
      type: object
      properties:
        id:
          type: integer
          description: The ID of label.
        name:
          type: string
          description: The name of label.
        description:
          type: string
          description: The description of label.
        color:
          type: string
          description: The color of label.
        scope:
          type: string
          description: The scope of label, g for global labels and p for project labels.
        project_id:
          type: integer
          description: The project ID if the label is a project label.
        creation_time:
          type: string
          description: The creation time of label.
        update_time:
          type: string
          description: The update time of label.
        deleted:
          type: boolean
          description: The label is deleted or not.
      example:
        creation_time: creation_time
        update_time: update_time
        deleted: true
        color: color
        project_id: 6
        scope: scope
        name: name
        description: description
        id: 0
    SecurityReport:
      type: object
      properties:
        signature:
          $ref: '#/components/schemas/DigitalSignature'
      description: The security information of the chart
      example:
        signature:
          prov_file: prov_file
          signed: true
    Dependency:
      required:
      - name
      - version
      type: object
      properties:
        name:
          type: string
          description: The name of the chart denpendency
        version:
          type: string
          description: The version of the chart dependency
        repository:
          type: string
          description: The URL to the repository
      description: Another chart the chart depends on
      example:
        name: name
        repository: repository
        version: version
    DigitalSignature:
      type: object
      properties:
        signed:
          type: boolean
          description: A flag to indicate if the chart is signed
        prov_file:
          type: string
          description: The URL of the provance file
      description: The signature of the chart
      example:
        prov_file: prov_file
        signed: true
    inline_response_200:
      type: object
      properties:
        version:
          type: string
      example:
        version: version
    inline_response_200_1:
      type: object
      properties:
        healthy:
          type: boolean
      example:
        healthy: true
    body:
      required:
      - chart
      properties:
        chart:
          type: string
          description: The chart file
          format: binary
    body_1:
      required:
      - prov
      properties:
        prov:
          type: string
          description: The provance file
          format: binary
    body_2:
      required:
      - chart
      properties:
        chart:
          type: string
          description: The chart file
          format: binary
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
x-original-swagger-version: "2.0"
